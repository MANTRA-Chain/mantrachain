syntax = "proto3";
package mantrachain.tax.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "mantrachain/tax/v1/params.proto";

option go_package = "github.com/MANTRA-Chain/mantrachain/x/tax/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (amino.name) = "mantrachain/x/tax/MsgUpdateParams";
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module parameters.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string mca_tax = 2;
  string mca_address = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
